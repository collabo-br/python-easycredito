openapi: 3.0.0
info:
  title: Easyc External
  description: API para processo externo
  version: 1.0.0
  contact:
    email: tecnologia@easycredito.me
servers:
  - url: 'https://demo-api.easycredito.com.br/api/external/v1'
    description: Demo
  - url: 'http://localhost:8080/api/external/v1'
    description: Local
tags:
  - name: process
    description: Process of credit
  - name: enums
    description: Aditionals Enums
paths:
  /process/signup:
    post:
      tags:
        - process
      summary: Step 1 - signup
      description: |
        # Signup
        > Make sign up of users (can return error if user already registered)
        > > Realiza o cadastro de usuários (pode retornar erro caso o usuario já esteja cadastrado)
      security:
        - partner_auth: []
      operationId: signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
            example:
              cpf: 00000000191
              name: Fulano d'Tal
              birthday: '1992-07-25'
              email: fulano@email.com
              phone: '62987654321'
              zipCode: '74180040'
              hasCreditCard: true
              hasRestriction: true
              hasOwnHouse: true
              hasVehicle: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
  '/process/probatory/{cpf}':
    put:
      tags:
        - process
      summary: Step 2 - Probatory Kit
      description: |
        # Probatory Kit
        > Send data to validatetion of "Term of use", "Term of SCR" and "Privacy Policy"
        > > Envia os dados para validação do aceite do "Termo de Uso", "Termo de consulta SCR" e "Política de privacidade"

        > https://easycredito.com.br/termos-de-uso
        > https://easycredito.com.br/politica-de-privacidade
        > https://easycredito.com.br/scr
      security:
        - partner_auth: []
      operationId: probatory
      parameters:
        - in: path
          name: cpf
          description: 'Número do documento, apenas números'
          schema:
            type: string
            minLength: 11
            maxLength: 11
          required: true
          example: 00000000191
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProbatoryRequest'
            example:
              latitude: -16.6982283
              longitude: -49.2581201
              occurrenceDate: '2019-08-21T14:31:17.459Z'
              userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36'
              ip: 0.0.0.0
              mac: '00:00:00:00:00:00'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbatoryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
  '/process/update/{cpf}':
    put:
      tags:
        - process
      summary: Step 3 - Update
      description: |
        # Update
        > Get and valid user informations
        > > Coleta e valida os dados necessários para a criação das propostas
      security:
        - partner_auth: []
      operationId: update
      parameters:
        - in: path
          name: cpf
          description: 'Número do documento, apenas números'
          schema:
            type: string
            minLength: 11
            maxLength: 11
          required: true
          example: 00000000191
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest'
            example:
              borrower:
                mother: Fulana Mãe
                gender: MASCULINO
                identity:
                  identityType: RG
                  identityNumber: '123456'
                  identityIssuer: SSP
                  identityState: GO
                  identityIssuingDate: '2010-01-01'
                address:
                  zipCode: '74000000'
                  address: Cidade de Goiânia
                  addressNumber: 0
                  complement: toda a cidade
                  district: geral
                  state: GO
                  city: Goiânia
                  homeType: ALUGADA
                vehicle:
                  licensePlate: XXX0000
                business:
                  occupation: ASSALARIADO
                  businessProfession: ADMINISTRADOR
                  businessCompanyPhone: '6239413142'
                  businessTypeProofIncome: CONTRA_CHEQUE
                  businessIncome: 999.99
                  businessPayday: 1
                  businessSameAddress: false
                  address:
                    zipCode: '74000000'
                    address: Cidade de Goiânia
                    addressNumber: 1
                    complement: toda a cidade
                    district: geral
                    state: GO
                    city: Goiânia
              loan:
                nationality: BRASILEIRO
                hometownState: GO
                hometown: Goiânia
                education: POS_GRADUACAO
                relationshipStatus: CASADO
                loanObjectives: EVENTOS_FESTAS
                bank:
                  bank: '001'
                  accountType: CONTA_CORRENTE_INDIVIDUAL
                  agency: '0001'
                  account: '5647891'
                address:
                  homeSince: MAIOR_2_ANOS
                business:
                  businessCompanyName: Abobrinha
              card:
                phoneLandline: '6212345678'
                creditCardBenefits: DESCONTOS
                reference:
                  - name: Joana
                    phone: '11987654321'
                additionalCard:
                  - cpf: 012345678900
                    fullName: joana maria
                    birthdate: '1990-01-01'
              products:
                - loan
                - card
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
  '/process/proposal/{cpf}':
    post:
      tags:
        - process
      summary: Step 4 - Create proposals
      description: |
        # Create proposals
        > Get and valid user informations requested for create propostals
        > > Coleta e valida os dados necessários para a criação das propostas de acordo com os tipos de propostas selecionados
      security:
        - partner_auth: []
      operationId: proposal
      parameters:
        - in: path
          name: cpf
          description: 'Número do documento, apenas números'
          schema:
            type: string
            minLength: 11
            maxLength: 11
          required: true
          example: 00000000191
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposalRequest'
            example:
              loan:
                value: 1000
                installments: 12
              card:
                network: VISA
                international: false
                prepaid: false
                digitalAccount: false
                payDay: 1
              products:
                - loan
                - card
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
  '/process/document/{cpf}':
    put:
      tags:
        - process
      summary: Step 5 - Send document to analysis
      description: |
        # Documents
        > Send a document to analysis
        > > Envia um documento por vez para análise.
      security:
        - partner_auth: []
      operationId: document
      parameters:
        - in: path
          name: cpf
          description: 'Número do documento, apenas números'
          schema:
            type: string
            minLength: 11
            maxLength: 11
          required: true
          example: 00000000191
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
  '/process/feedback/{cpf}':
    get:
      tags:
        - process
      summary: List proposals
      description: |
        # List proposals
        > List all proposals of user
        > > Lista todas as proposta do usuario
      security:
        - partner_auth: []
      operationId: feedback
      parameters:
        - in: path
          name: cpf
          description: 'Número do documento, apenas números'
          schema:
            type: string
            minLength: 11
            maxLength: 11
          required: true
          example: 00000000191
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
  '/process/feedbackbyrequest/{request_id}':
    get:
      tags:
        - process
      summary: List proposals by request id
      description: |
        # List proposals by request id
        > List all proposals of user by request id
        > > Lista todas as proposta do usuario pelo id da request
      security:
        - partner_auth: []
      operationId: feedbackbyrequest
      parameters:
        - in: path
          name: request_id
          description: 'Número da request de criação das credits, apenas números'
          schema:
            type: number
            minLength: 8
            maxLength: 11
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
  '/enums/cities/{state}':
    get:
      tags:
        - enums
      summary: Cities
      description: |
        # Cities
        > List all brazilian cities
        > > Lista de municípios brasileiros
      security:
        - partner_auth: []
      operationId: city
      parameters:
        - in: path
          name: state
          schema:
            $ref: '#/components/schemas/State'
          required: true
          example: GO
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
components:
  schemas:
    SignupRequest:
      type: object
      properties:
        cpf:
          type: string
          minLength: 11
          maxLength: 11
          description: |
            > Document number, only numbers
            > > Número do documento, apenas números
        name:
          type: string
          maxLength: 100
          description: |
            > Name of user
            > > Nome do usuário
        birthday:
          type: string
          format: date
          minLength: 10
          maxLength: 10
          description: |
            > Birhday, format (yyyy-mm-dd)
            > > Data de nascimento, formato (aaaa-mm-dd)
        email:
          type: string
          maxLength: 100
          description: |
            > Valid email
            > > Email válido
        phone:
          type: string
          minLength: 10
          maxLength: 11
          description: |
            > Valid phone with DDD, only numbers
            > > Telefone válido com DDD, apenas numeros
        zipCode:
          type: string
          minLength: 8
          maxLength: 8
          description: |
            > Valid zip code, only numbers
            > > CEP válido do usuário, apenas números
        hasCreditCard:
          type: boolean
          description: |
            > Has credit card
            > > O usuário informou possuir cartão de crédito em seu nome
        hasRestriction:
          type: boolean
          description: |
            > Has overdue debts
            > > O usuário informou possuir restrições em seu nome
        hasOwnHouse:
          type: boolean
          description: |
            > Has own house
            > > O usuário informou possuir casa própria em seu nome
        hasVehicle:
          type: boolean
          description: |
            > Has vehicle
            > > O usuário informou possuir veículo em seu nome
      required:
        - cpf
        - name
        - birthday
        - email
        - phone
        - zipCode
    SignupResponse:
      type: object
      properties:
        borrower:
          $ref: '#/components/schemas/SignupRequest'
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductType'
    ProbatoryRequest:
      type: object
      properties:
        latitude:
          type: number
          description: Latitude
        longitude:
          type: number
          description: Longitude
        occurrenceDate:
          type: string
          format: date-time
          description: 'Data da ocorrência, formato (aaaa-MM-dd''T''HH:mm:ss.SSSz)'
        userAgent:
          type: string
          description: UserAgent do navegador do usuário
        ip:
          type: string
          description: IP do usuário
        mac:
          type: string
          description: MAC do usuário
      required:
        - latitude
        - longitude
        - occurrenceDate
        - userAgent
        - ip
    ProbatoryResponse:
      $ref: '#/components/schemas/ProbatoryRequest'
    UpdateRequest:
      type: object
      properties:
        borrower:
          $ref: '#/components/schemas/Borrower'
        loan:
          $ref: '#/components/schemas/Loan'
        card:
          $ref: '#/components/schemas/Card'
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductType'
    UpdateResponse:
      $ref: '#/components/schemas/FeedbackResponse'
    ProposalRequest:
      type: object
      properties:
        loanRequest:
          $ref: '#/components/schemas/LoanRequest'
        cardRequest:
          $ref: '#/components/schemas/CardRequest'
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductType'
    DocumentRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        mimeType:
          $ref: '#/components/schemas/MimeType'
        name:
          type: string
          description: Nome do arquivo
        base64:
          type: string
          description: Arquivo encodado em base64
      example:
        type: SELF
        mimeType: image/png
        name: self1347.png
        base64: iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAMAAAD04JH5AAAA6lBMVEX////9zJtRNir3lB78vIXzbCE7JRn//fv9x5T8voj8wo7+59BaQDX6ypnXq4L9yZf3lF58aF9gRzz0xJXGm3fpu47/9u7/+fT9z6L+7Nn7z5r5rFD5s15sVUuXhn/y8O/o5eNxUj+qhGSUcFb+0q34njLPx8SIdW21qqXc19TGvbnSy8iwpJ6ik43TqIBpSzqIZk65kW58W0aeel2Sb1WRgHn+3sOYblBLNyz92Lf+4sf6rHn5oGv7tYP1fCz6rnT2j071fjj2ih/82Kz5rlX7yIv6u3H4nTHSm2++i2Tsr3yVfWrKlWr1gyCZwkRKAAAGUElEQVR4nMVaaVviPBRlKbSFQtnKJiiguDAiqzqU0WFkZnSc1///d96kabrQNiRNOp4PPlrTe05u7hYeUql4kAeX19Orfq3W71erV/en1zcxDcXhngDmTABadXp5ljz72eRKC5I7qE7kJNkHt1UCOUJtOkiIXb4N8XsorpKIB/m6RkkPcSo6GOQJ7e7xQVwL5Welh6gOhNGfHY+8UCd8EcR/w3L4PtwK4b8kpf0/UHAbn16IglMu/kxmypmP15z8MB95avMNx/k76Mevi3KM9A+BFjsfeQPAUTCJxz8RxA9wGUuAmAOwUIuTDJfi+EGHjiHgSqSADHt3HAjlz9SYBUzFCsgwZ0LsHhiBKiO/4BMAYCyIAouAjSmbANEhwHwG8cYwItiKkYg+eACmeiw+BhnHo5sEBNyzCBDaCGwwRaH4LGSsxvzDYAhYpkO+aTwCLB6IX4eGo9knCliOyum0EVVDEhYwWzfqaQt34Qs0FgFsMTCbrxbltItGQgK0IcRs5rhY0wB1o1xKH2LBLSCQhsNVw3AJSnXDMOoBXrIPeOrA/I5ARquASYCvEs7KxwkDKA8PBfRZBHzxbp/k62iURgfpyNQLPN3w3NnTYrUczldEd5RX8+ESp4Sx9Ak4ZRFw5kafHeOl1XGP1Od4zarkfweC6W4i47c0O/ZLnt3MowTM3TVLpHvtEcB2Q8XnN7Jt+6LaCOc3vGsa6JEnDgZMAuyrsYbdDZyprUeLxgJ6IiIMynDnYMloDWhX6NnI4WeqQ85U7HjbaGBWY3EeEQT18wX2TRmXLdcrjGO5fTdeRB03NZxywDQSplL3xNNmgHMGjJ8Z2v2Ym98KDAtsd8PmQpSAOo7BDgu/qb6JEpC2J7RH1aTnf5Ckd/TaQas3KGKifjAf2NXpjyQ9UPtflSRJCwowZvl85khjrs/z+fzI+8Qux++SpDYpBVwAfgmVXm/GG9NBH1gn9+a/g1OwZuV5gqJpCG1e0PF34FrpMSBgPUndA+NDEv/dfWoC1uQ976ER9dEySheID9baP4E6MPtahbaJgTnKV7/CRZ6DQrXwzTJKFwXWCUhvAQ9oeYTgDOpiZa9puI9K0M7Sskl5BgparB2m4RLZnpE80LAF+DyHcgBCoRKA1lpB4CMrI9vE9lCaWWuWPuHAjm1TohJQQGv/g7Hrs77IHwR4CMoZGKe+crHCIShJBSoBbck5g4PZx1iMjg7I9cbozh8ljczw3TbZphKwcc+Avxun4WSI+aUNlYAiXj5fkwKeHgo2KBWpBMjOCwUh/OkCtqdQfkbSwS+oYgSo2B51R77Ab4gRgK1RtgKAFk4ERQQ/PtF2i1oA7gdigsAOAeppAKGz0QH/hQgBF0CBvmGayBBaYH5oEwzrob8GAIpPk8X5fmwI/JJqh4iiSgQFdMUnCkXC1kB2qWqhoKrkfKUrPlFoEizrTn6rpCOgHQQjsCeYTisFuPsCMVn3fPypDsk4DWJEvw8yKQ8o0Ob+cpvJJ4DhOhSBFpcLmMpvBEiZeBR8OYgQGgXbrT/1dHW7DXOAkK83hiWCvq1Uvm2fQAqCVHzafqtUtmG1gDcFbITWY92iRQBSQksRXxV2QYhDpUAoQyIiEIFUkAngLMJeRNZD2Iyi/icoABAic1GJPAERGegBc08Quv8YCoTzg0hkqMltgfHnQqbuS2ZS3+9uEscTjH0i27fRIUypCHHmbyY0TUIstM0kd48hd8xQP2zMTqLf7ffBBD1AUXQd9CDwQ4E9kf7qKQLFtF5wpnLWu68YAWl7Kv9MAQC6Yt2MPk8A1qELbz5sAiD+rQBT8l+IC5LEfwOgxWa7e859P3TA99zz7ukh8ULQ6fbGHzmIim8SUSrWw9xrr5tgKW52T7IQSEFu94Q/oHjaoSfP1r9PuonUY8wO8ZLD+LHb/XD++HAWiNdg9rI+fOQCeH7xreiJDMrNSTaAZyK95QZB9xJ5H0IPz8H1wvNHkN6SsBeQFftxqG1bxMtHBLeNMfcnND9J5mnwkyct5V+89BC/Yp+DSfI+A8bxEkLM9hHiOKHVO26XHj3mm3ozPPdi44SxNBYFHb+LMdO8UBRND8GgoCV8/xBj+jgQGn8uerT83WT4s9kuHX8zKf5sli4V9skJoGtNv5MT8JtKwGtyAl6DbP8DB1uimQNWVe8AAAAASUVORK5CYII=
    DocumentResponse:
      $ref: '#/components/schemas/Document'
    FeedbackResponse:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/LoanCredit'
          - $ref: '#/components/schemas/CardCredit'
    CityResponse:
      type: array
      items:
        type: string
    Borrower:
      type: object
      properties:
        mother:
          type: string
          description: Nome da Mãe
        gender:
          $ref: '#/components/schemas/Gender'
        identity:
          $ref: '#/components/schemas/Identity'
        address:
          $ref: '#/components/schemas/PersonalAddress'
        vehicle:
          $ref: '#/components/schemas/Vehicle'
        business:
          $ref: '#/components/schemas/Business'
      required:
        - mother
        - gender
        - identity
        - address
        - business
    Loan:
      type: object
      properties:
        nationality:
          $ref: '#/components/schemas/Nationality'
        hometownState:
          $ref: '#/components/schemas/State'
        hometown:
          $ref: '#/components/schemas/City'
        education:
          $ref: '#/components/schemas/Education'
        relationshipStatus:
          $ref: '#/components/schemas/RelationshipStatus'
        loanObjectives:
          $ref: '#/components/schemas/LoanObjectives'
        bank:
          $ref: '#/components/schemas/Bank'
        address:
          $ref: '#/components/schemas/LoanAddress'
        business:
          $ref: '#/components/schemas/LoanBusiness'
      required:
        - nationality
        - hometownState
        - hometown
        - education
        - relationshipStatus
        - loanObjectives
        - bank
        - address
        - business
    Card:
      type: object
      properties:
        phoneLandline:
          type: string
        creditCardBenefits:
          $ref: '#/components/schemas/CreditCardBenefits'
        reference:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
        additionalCard:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalCard'
      required:
        - phoneLandline
        - creditCardBenefits
        - reference
        - additionalCard
    LoanRequest:
      type: object
      properties:
        value:
          type: string
          description: Valor
        installments:
          type: string
          description: Numero de parcelas
    CardRequest:
      type: object
      properties:
        network:
          $ref: '#/components/schemas/Network'
        international:
          type: boolean
          description: Internacional
        prepaid:
          type: boolean
          description: Cartão pré pago
        digitalAccount:
          type: boolean
          description: Conta Digital
        payDay:
          type: number
          description: Dia da Fatura
    Document:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        mimeType:
          $ref: '#/components/schemas/MimeType'
        name:
          type: string
          description: Nome do documento
        url:
          type: string
          description: Url do documento
        dateCreated:
          type: string
          description: Data de Criação do Documento
    Credit:
      type: object
      properties:
        customerServiceNumber:
          type: string
          description: Número de serviço da solicitação
        type:
          $ref: '#/components/schemas/ProductType'
        product:
          type: string
          description: Nome do produto
        hasDocuments:
          type: boolean
          description: Informa se a proposta já possui os documentos
        lastStatus:
          $ref: '#/components/schemas/CreditStatus'
        dateCreated:
          type: string
          format: date-time
          description: Data da criação da proposta
        lastUpdated:
          type: string
          format: date-time
          description: Data da última atualização da proposta
        serviceCharge:
          type: number
          description: Taxa de serviço
        requestId:
          type: integer
          description: ID da solicitação de criação das credits. Usado para identificar as credits do mesmo cliente.
      required:
        - customerServiceNumber
        - type
        - product
        - hasDocuments
        - requestId
        - lastStatus
        - dateCreated
        - lastUpdated
        - serviceCharge
    LoanCredit:
      allOf:
        - $ref: '#/components/schemas/Credit'
        - type: object
          properties:
            value:
              type: number
              description: Valor do empréstimo
            installments:
              type: integer
              description: Número de parcelas
            monthlyTax:
              type: number
              description: Taxa de juros mensal
            installmentsValue:
              type: number
              description: Valor da parcela
            iofValue:
              type: number
              description: Valor do IOF
            grossValue:
              type: number
              description: Valor financiado
            firstPaymentDate:
              type: string
              format: date
              description: Data da primeira parcela
            cet:
              type: number
              description: Custo efetivo total anual
            releasedDate:
              type: string
              format: date
              description: Data da Liberação do empréstimo
          required:
            - value
            - installments
            - monthlyTax
      example:
        customerServiceNumber: '20190805062216'
        type: loan
        product: EMPRÉSTIMO PESSOAL
        hasDocuments: false
        lastStatus: EM_ANALISE_OPERACIONAL
        dateCreated: '2019-08-05T21:22:19Z'
        lastUpdated: '2019-08-05T21:22:22Z'
        serviceCharge: 0
        value: 50000
        installments: 36
        monthlyTax: 0.059
        installmentsValue: 3490.77
        iofValue: 1652.59988
        grossValue: 51652.6
        firstPaymentDate: '2019-09-04T21:22:16Z'
        cet: 1.052660058382551
        releasedDate: '2019-08-05T21:22:16Z'
        requestId: 900152918
    CardCredit:
      allOf:
        - $ref: '#/components/schemas/Credit'
        - type: object
          properties:
            international:
              type: boolean
              description: Internacional
            annuity:
              type: number
              description: Valor da anuidade
            network:
              $ref: '#/components/schemas/Network'
            prepaid:
              type: boolean
              description: Cartão pré pago
            digitalAccount:
              type: boolean
              description: Conta Digital
      example:
        customerServiceNumber: '20190805062221'
        type: card
        product: Cartão de Crédito - Visa Platinum
        hasDocuments: false
        lastStatus: EM_ANALISE_AUTOMATICA
        dateCreated: '2019-08-05T21:22:21Z'
        lastUpdated: '2019-08-05T21:22:22Z'
        serviceCharge: 0
        international: false
        annuity: 499.92
        network: VISA
        prepaid: false
        digitalAccount: false
        requestId: 900152918
    Identity:
      type: object
      properties:
        identityType:
          $ref: '#/components/schemas/IdentityType'
        identityNumber:
          type: string
          description: Número da identidade
        identityIssuer:
          $ref: '#/components/schemas/IdentityIssuer'
        identityState:
          $ref: '#/components/schemas/State'
        identityIssuingDate:
          type: string
          format: date
          description: Data de Emissão
      required:
        - identityType
        - identityNumber
        - identityIssuer
        - identityState
        - identityIssuingDate
    Address:
      type: object
      properties:
        zipCode:
          type: string
          description: Código CEP
        address:
          type: string
          description: Endereço
        addressNumber:
          type: string
          description: Número
        complement:
          type: string
          description: Complemento
        district:
          type: string
          description: Bairro
        state:
          $ref: '#/components/schemas/State'
        city:
          $ref: '#/components/schemas/City'
      required:
        - zipCode
        - address
        - addressNumber
        - district
        - state
        - city
    PersonalAddress:
      allOf:
        - $ref: '#/components/schemas/Address'
        - type: object
          properties:
            homeType:
              $ref: '#/components/schemas/HomeType'
          required:
            - homeType
    LoanAddress:
      type: object
      properties:
        homeSince:
          $ref: '#/components/schemas/HomeSince'
      required:
        - homeSince
    Bank:
      type: object
      properties:
        bank:
          $ref: '#/components/schemas/Banks'
        accountType:
          $ref: '#/components/schemas/AccountType'
        agency:
          type: string
          description: Número da agência
        account:
          type: string
          description: Número da conta
      required:
        - bank
        - accountType
        - agency
        - account
    Vehicle:
      type: object
      properties:
        licensePlate:
          type: string
          description: Placa veicular
      required:
        - licensePlate
    Business:
      type: object
      properties:
        occupation:
          $ref: '#/components/schemas/Occupation'
        businessProfession:
          $ref: '#/components/schemas/Profession'
        businessCompanyPhone:
          type: string
          description: Número de telefone da empresa
        businessTypeProofIncome:
          $ref: '#/components/schemas/TypeProofIncome'
        businessIncome:
          type: string
          description: Salário
        businessPayday:
          type: string
          description: Dia em que recebe o Salário
        address:
          $ref: '#/components/schemas/Address'
      required:
        - occupation
        - businessProfession
        - businessCompanyPhone
        - businessTypeProofIncome
        - businessIncome
        - businessSameAddress
        - address
    LoanBusiness:
      type: object
      properties:
        businessCompanyName:
          type: string
          description: Nome da empresa
        businessEmpregador:
          $ref: '#/components/schemas/BusinessEmpregador'
        businessLotacao:
          type: string
          description: requerido se (ocupation == 'APOSENTADO_PENSIONISTA' || ocupation == 'FUNCIONARIO_PUBLICO')
        businessOrgao:
          type: string
          description: requerido se (ocupation == 'APOSENTADO_PENSIONISTA' || ocupation == 'FUNCIONARIO_PUBLICO')
        businessBenefitNumber:
          type: string
          description: requerido se (ocupation == 'APOSENTADO_PENSIONISTA')
        businessBenefitType:
          type: string
          description: requerido se (ocupation == 'APOSENTADO_PENSIONISTA')
        businessBenefitCategory:
          $ref: '#/components/schemas/BusinessBenefitCategory'
      required:
        - businessCompanyName
    Reference:
      type: object
      properties:
        name:
          type: string
          description: Nome da referência
        phone:
          type: string
          description: Número de telefone
      required:
        - name
        - phone
    AdditionalCard:
      type: object
      properties:
        cpf:
          type: string
          description: CPF do cartão adicional
        fullName:
          type: string
          description: Nome do cartão adicional
        birthdate:
          type: string
          format: date
          description: Data de nascimento do cartão adicional
      required:
        - cpf
        - fullName
        - birthdate
    Error:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
          description: Mensagem de erro
      required:
        - code
        - message
    Success:
      type: object
      properties:
        requestId:
          type: integer
          description: ID da request que cria as credits
        type:
          type: string
          description: Tipo da solicitação
      required:
        - requestId
        - type
    ErrorFields:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            errors:
              type: array
              items:
                $ref: '#/components/schemas/ErrorField'
    ErrorField:
      type: object
      properties:
        field:
          type: string
          description: Nome do campo com erro
        message:
          type: string
          description: Mensagem de erro
      required:
        - field
        - message
    ErrorCode:
      type: string
      description: Codigo do erro
      enum:
        - BAD_REQUEST
        - CONFLICT
        - NOT_FOUND
        - UNAUTHORIZED
    ProductType:
      type: string
      description: Tipos de produtos disponíveis para o usuário
      enum:
        - loan
        - card
    CreditStatus:
      type: string
      description: Estados de análise
      enum:
        - PRE_APROVADO
        - PENDENTE
        - AGUARDANDO_DOCUMENTOS
        - EM_ANALISE_AUTOMATICA
        - EM_ANALISE_MANUAL
        - EM_ANALISE_OPERACIONAL
        - EM_ANALISE_DOCUMENTAL
        - CONTRATADO
        - LIBERADO
        - REPROVADO
        - EXPIRADO
    DocumentType:
      type: string
      description: Tipos de documentos
      enum:
        - SELF
        - IDENTITY_FRONT
        - IDENTITY_BACK
        - ADDRESS_PROOF
        - INCOME_PROOF
    Gender:
      type: string
      description: Gênero
      enum:
        - FEMININO
        - MASCULINO
    State:
      type: string
      description: Codigo de estado
      enum:
        - AC
        - AL
        - AP
        - AM
        - BA
        - CE
        - DF
        - ES
        - GO
        - MA
        - MT
        - MS
        - MG
        - PA
        - PB
        - PR
        - PE
        - PI
        - RJ
        - RN
        - RS
        - RO
        - RR
        - SC
        - SP
        - SE
        - TO
    City:
      type: string
      description: 'Município. Obtido em "/enums/city/{state}"'
    IdentityType:
      type: string
      description: Tipo de documento de identificação
      enum:
        - RG
        - CNH
        - PASSAPORTE
        - CARTEIRA_CRC
        - CARTEIRA_CREA
        - CARTEIRA_OAB
        - CARTEIRA_CRE
    IdentityIssuer:
      type: string
      description: Órgão expedidor do documento de identificação
      enum:
        - SSP
        - DETRAN
        - CONS_REG_ECONOMIA
        - MIN_EXERCITO
        - OAB
        - CREA
        - SJS
        - CTPS
        - CREME
        - MINEX
        - CRM
        - SJTC
        - MAER
        - DPF
        - RBF
        - IML
        - CPROF
        - CRO
        - CRC
        - DPMAF
        - ME
        - BM
        - AERON
        - SJT
        - COREN
        - DETRA
        - EXERC
        - SSI
        - MINISTERIO_DA_MARINHA
        - CRA_CONSELHO_ADMINISTRATIVO
        - INSTITUTO_FELIX_PACHECO
        - INST_NAC_PROPRIEDADE_INDUSTRIA
        - MINISTERIO_DA_FAZENDA
        - TRIBUNAL_REGIONAL_DO_TRABALHO
        - CONSELHO_REGIONAL_PSICOLOGIA
        - POLICIA_MILITAR
    HomeType:
      type: string
      description: Tipo de residência
      enum:
        - ALUGADA
        - PARENTES
        - FUNCIONAL
        - PROPRIA_QUITADA
        - PROPRIA_FINANCIADA
        - OUTROS
    Nationality:
      type: string
      description: Nacionalidade
      enum:
        - BRASILEIRO
        - ESTRANGEIRO
    Network:
      type: string
      description: Bandeira do Cartão de crédito
      enum:
        - VISA
        - MASTERCARD
        - ELO
    Education:
      type: string
      description: Nível de escolaridade
      enum:
        - NAO_ALFABETIZADO
        - ENSINO_FUNDAMENTAL_INCOMPLETO
        - ENSINO_FUNDAMENTAL_COMPLETO
        - ENSINO_MEDIO_INCOMPLETO
        - ENSINO_MEDIO_COMPLETO
        - ENSINO_SUPERIOR_INCOMPLETO
        - ENSINO_SUPERIOR_COMPLETO
        - POS_GRADUACAO
    RelationshipStatus:
      type: string
      description: Estado civil
      enum:
        - CASADO
        - DIVORCIADO
        - VIUVO
        - SEPARADO
        - SOLTEIRO
        - COMPANHEIRO
        - UNIAO_ESTAVEL
        - SEPARADO_JUDICIALMENTE
    LoanObjectives:
      type: string
      description: Objetivo do empréstimo
      enum:
        - AJUDAR_UMA_OUTRA_PESSOA_DA_FAMILIA
        - BELEZA_E_SAUDE
        - COMECAR_UM_NOVO_NEGOCIO
        - COMPRAR_CONSERTAR_UM_CARRO
        - COMPRAR_REFORMAR_UMA_CASA
        - EDUCACAO
        - EVENTOS_FESTAS
        - FAZER_COMPRAS
        - FERIAS_VIAGENS
        - PAGAR_CONTAS
        - PAGAR_OUTRAS_DIVIDAS
        - OUTRAS
    CreditCardBenefits:
      type: string
      description: Benefícios de interesse
      enum:
        - ANUIDADE_GRATIS
        - MILHAS_AERIAS
        - DESCONTOS
        - CONTA_DIGITAL
        - PROGRAMAS_DE_VANTAGENS
    HomeSince:
      type: string
      description: Tempo de residẽncia
      enum:
        - MENOR_6_MESES
        - MENOR_1_ANO
        - MENOR_2_ANOS
        - MAIOR_2_ANOS
    Banks:
      type: string
      enum:
        - '001'
        - '003'
        - '004'
        - '021'
        - '025'
        - '033'
        - '037'
        - '041'
        - '047'
        - 069
        - '070'
        - '074'
        - '077'
        - 084
        - 085
        - 097
        - 098
        - 099
        - '104'
        - '114'
        - '121'
        - '133'
        - '136'
        - '212'
        - '218'
        - '237'
        - '260'
        - '279'
        - '318'
        - '341'
        - '389'
        - '422'
        - '487'
        - '610'
        - '611'
        - '623'
        - '637'
        - '643'
        - '654'
        - '655'
        - '707'
        - '748'
        - '756'
      description: |
        Códigos de bancos disponíveis:
          * 341 - Itaú Unibanco  S.A.
          * 237 - Banco Bradesco S.A.
          * 104 - Caixa Econômica Federal
          * 001 - Banco do Brasil S.A.
          * 033 - Banco Santander (Brasil) S. A.
          * 077 - Banco Inter S.A.
          * 260 - Nu Pagamentos S.A.
          * 212 - Banco Original S.A.
          * 748 - Banco Cooperativo Sicredi S. A.
          * 756 - Banco Cooperativo do Brasil S/A - Bancoob
          * 655 - Banco Votorantim S.A.
          * 070 - Banco de Brasília S.A.
          * 021 - Banestes S.A. Banco do Estado do Espírito Santo
          * 121 - Banco Agibank S.A.
          * 037 - Banco do Estado do Pará S.A.
          * 004 - Banco do Nordeste do Brasil S.A.
          * 085 - Cooperativa Central de Crédito - Ailos
          * 389 - Banco Mercantil do Brasil S.A.
          * 318 - Banco BMG S.A.
          * 422 - Banco Safra S.A.
          * 003 - Banco da Amazônia S.A.
          * 047 - Banco do Estado de Sergipe S.A.
          * 218 - Banco BS2 S.A.
          * 114 - Central Cooperativa de Crédito no Estado do Espírito Santo - CECOOP
          * 041 - Banco do Estado do Rio Grande do Sul S.A.
          * 025 - Banco Alfa S.A.
          * 069 - Banco Crefisa S.A.
          * 637 - Banco Sofisa S. A.
          * 074 - Banco J. Safra S.A.
          * 611 - Banco Paulista S.A.
          * 099 - Uniprime Central – Central Interestadual de Cooperativas de Crédito Ltda.
          * 707 - Banco Daycoval S.A.
          * 279 - Cooperativa de Crédito Rural de Primavera do Leste
          * 136 - Confederação Nacional das Cooperativas Centrais Unicred Ltda – Unicred do Brasi
          * 654 - Banco A. J. Renner S.A.
          * 084 - Uniprime Norte do Paraná - Cooperativa de Crédito Ltda.
          * 097 - Cooperativa Central de Crédito Noroeste Brasileiro Ltda - CentralCredi
          * 098 - Credialiança Cooperativa de Crédito Rural
          * 133 - Confederação Nacional das Cooperativas Centrais de Crédito e Economia Familiar
          * 487 - Deutsche Bank S.A. - Banco Alemão
          * 477 - City Bank
          * 610 - Banco VR S.A.
          * 623 - Banco Pan S.A.
          * 643 - Banco Pine S.A.
    AccountType:
      type: string
      description: Tipo de conta bancária
      enum:
        - CONTA_CORRENTE_INDIVIDUAL
        - CONTA_CORRENTE_CONJUNTA
        - CONTA_POUPANCA_CONJUNTA
        - CONTA_POUPANCA_INDIVIDUAL
    Occupation:
      type: string
      description: Tipo de ocupação
      enum:
        - APOSENTADO_PENSIONISTA
        - AUTONOMO
        - EMPRESARIO
        - PROFISSIONAL_LIBERAL
        - ASSALARIADO
        - FUNCIONARIO_PUBLICO
        - DESEMPREGADO
    Profession:
      type: string
      enum:
        - ACOUGUEIRO
        - ACUMPURISTA
        - ADESTRADOR
        - ADMINISTRADOR
        - ADVOGADO
        - AEROVIARIO
        - AFIADOR
        - AGENCIADOR_DE_PROPAGANDA
        - AGENCIADOR_CARGAS_TRANSPORTES
        - AGENTE_ADMINISTRATIVO
        - AGENTE_DE_COMPRA_VENDA
        - AGENTE_DE_SERVICOS_FUNERARIOS
        - AGENTE_DE_VIAGEM
        - AGRONOMO
        - AJUDANTE_GERAL
        - AJUSTADOR_RETIFICADOR
        - ALFAIATE
        - AMBULANTES
        - ANALISTA_RECURSOS_HUMANOS
        - ANALISTA_CREDITO_E_COBRANCA
        - ANALISTA_CUSTOS_PROJ_SERV_ECONOMIA
        - ANALISTA_PRODUCAO_CRONOALISTA
        - ANALISTA_SISTEMAS
        - APOSENTADO
        - ARBITRO_DE_ESPORTES
        - ARMADOR_DE_FERRAGENS
        - ARMEIRO
        - ARQUEOLOGO
        - ARQUITETO
        - ARQUIVISTA
        - ARTESAO
        - ARTISTA_PLASTICO
        - ASCENSORISTA
        - ASSISTENTE_SOCIAL
        - ASTRONOMO
        - ATLETA
        - ATOR
        - ATUARIO
        - AUDITOR_PUBLICO
        - AUXILIAR_COZINHA_LIMPEZA_COSTURA_COPA
        - AUXILIAR_DE_ENFERMAGEM_TECNICO
        - AUXILIAR_DE_ESCRITORIO
        - AUXILIAR_DE_LABORATORIO
        - AUXILIAR_DE_SERVICOS_GERAIS
        - AVALIADOR
        - CUIDADOR
        - DANCARINO
        - BANCARIO
        - BARBEIRO
        - BARISTA
        - BIBLIOTECARIO
        - BILHETEIRO_COBRADOR
        - BIOLOGO
        - BIOMEDICO
        - BOLSISTA
        - BOMBEIRO_ENCANADOR
        - BORRACHEIRO
        - CABELEIREIRO
        - CAIXEIRO_VIAJANTE
        - CAMAREIRA_ARRUMADEIRA
        - CANTOR
        - CARGOS_DE_CONFIANCA_COMISSOES
        - CARREGADOR
        - CARTEIRO
        - CARTORARIO
        - CASEIRO
        - CAVALARICO
        - CENOGRAFO
        - CHAVEIRO
        - CHEFE_DA_PRODUCAO
        - CHEFE_INTERMEDIARIO
        - COBRADOR_EM_GERAL
        - COMANDANTE_DE_EMBARCACOES
        - COMENTARISTA
        - COMISSARIO_DE_BORDO
        - COMPOSITOR
        - COMUNICOLOGO
        - CONSELHEIRO_TUTELAR
        - CONSULTOR_DE_EMPRESAS
        - CONTADOR
        - CONTRAMESTRE
        - CONTROLADOR_DE_VOO
        - COREOGRAFO
        - CORRETOR_EM_GERAL
        - CORTADOR
        - COSTUREIRA
        - COZINHEIRO_CONFEITEIRO_PADEIRO
        - DECORADOR
        - DEGUSTADOR_VINHO_CAFE
        - DELEGADO_DE_POLICIA
        - DEMONSTRADOR
        - DENTISTA_ODONTOLOGO
        - DEPILADOR
        - DEPUTADO_ESTADUAL_FEDERAL
        - DESEMBARGADOR
        - DESENHISTA
        - DESPACHANTE_INCLUSIVE_ADUANEIRO
        - DETETIVE_INVESTIGADOR
        - DETETIZADOR
        - DIGITADOR
        - DIPLOMATA
        - DIRETOR_DE_EMPRESA
        - DIRETOR_DE_ESPETACULOS
        - DIRETOR_DE_ESTABELECIMENTO_DE_ENSINO
        - ECONOMISTA
        - ELETRICISTA
        - EMBALADOR
        - EMBALSAMADOR
        - EMPREGADA_DOMESTICA
        - EMPRESARIO_DE_ATLETA
        - ENFERMEIRO
        - ENGENHEIRO
        - ENTREVISTADOR_CENSO_PESQUISA_PRECOS
        - ESCRITOR
        - ESCULTOR
        - ESOTERICOS_ASTROLOGOS_TAROLOGO_NUMEROLOGO
        - ESTATISTICO
        - ESTETICISTA
        - ESTILISTA_MODELISTA
        - ESTIVADOR
        - FARMACEUTICO
        - FAXINEIRO_DIARISTA
        - FEIRANTE
        - FERRAMENTEIRO
        - FISCAL
        - FISCAL_DE_PRODUCAO
        - FISCAL_SERVICOS_DE_TRANSPORTE
        - FISICO
        - FISIOTERAPEUTA
        - FOGUISTA_DE_EMBARCACOES_OU_LOCOMOTIVAS
        - FONOAUDIOLOGO
        - FORCAS_ARMADAS_SOLDADO_MARINHEIRO
        - FOTOGRAFO
        - FRENTISTA_TRABALHADOR_DE_POSTO_DE_GASOLINA
        - FUNCIONARIO_PUBLICO_CIVIL_APOSENTADO
        - FUNDIDOR
        - GARAGISTA
        - GARCOM_MAITRE
        - GARIMPEIRO
        - GEOGRAFO
        - GEOLOGO
        - GERENTE
        - GESSISTA
        - GOVERNADOR_DE_ESTADO
        - GOVERNANTA
        - GUIA_TURISTICO
        - HOSPITAL_TRABALHADORES_EM_GERAL
        - IMPERMEABILIZADOR
        - INSPETOR
        - INSPETOR_DE_CONTROLE_DE_QUALIDADE
        - INSTALADOR_DE_GAS_AGUA_ESGOTO
        - INSTRUMENTADOR_CIRURGICO
        - INSTRUMENTISTA
        - INSTRUTOR_DE_AUTOESCOLA
        - INSTRUTOR_PROFESSOR_CURSOS_LIVRES
        - INTERPRETE_TRADUTOR
        - JARDINEIRO
        - JOALHEIRO
        - JORNALEIRO
        - JORNALISTA_REPORTER
        - JUIZ_DE_DIREITO
        - LANTERNEIRO
        - LAVADOR_DE_CARROS_ROUPAS
        - LEILOEIRO
        - LEITURISTA
        - GARI
        - LOCUTOR
        - MANICURE_PEDICURE_PODOLOGO
        - MANOBRISTA_NAO_EMPREGADO_GUARDADOR_DE_CARRO
        - MAQUILADOR
        - MAQUINISTA_DE_EMBARCACOES_OU_LOCOMOTIVAS
        - MARCENEIRO_CARPINTEIRO
        - MARINHEIRO_ASS
        - MASSAGISTA
        - MATEMATICO
        - MECANICO
        - MEDICO
        - MEMBRO_DA_DEFENSORIA_PUBLICA
        - MEMBRO_DE_EQUIPE_TECNICA_DE_ESPORTES
        - MEMBRO_DO_MINISTERIO_PUBLICO
        - MEMBRO_EQUIPE_TECNICA_ESPORTES
        - MESTRE_DE_PRODUCAO
        - METEOROLOGISTA
        - MILITAR_EM_GERAL
        - MILITAR_REFORMADO
        - MINISTRO_DE_ESTADO
        - MINISTRO_DE_TRIBUNAL_SUPERIOR
        - MODELO_DE_MODAS
        - MONTADOR
        - MOTORISTA_TRANSPORTE_CARGAS
        - MOTORISTA_TRANSPORTE_DE_PASSAGEIROS
        - MOTORISTA_AUTONOMO_TAXISTA_PRINCIPAL
        - MUSEOLOGO
        - MUSICO
        - NUTRICIONISTA
        - OFFICE_BOY_CONTINUO_ENTREGADOR_MOTOBOY
        - OFICIAL_DE_FORCAS_AUX_FORCAS_ARMADAS
        - OFICIAL_DE_JUSTICA
        - OPERADOR_DE_CALDEIRA
        - OPERADOR_DE_CAMERAS_DE_CINEMA_TV
        - OPERADOR_DE_COMPUTADOR
        - OPERADOR_DE_GUINDASTE
        - OPERADOR_DE_ILUMINACAO
        - OPERADOR_DE_MAQUINAS_APARELHOS
        - OPERADOR_DE_TELEMARKETING
        - OPERARIO_SEMI_ESPECIALIZADO_PRODUCAO
        - ORIENTADOR_PEDAGOGICO
        - OURIVES
        - PAISAGISTA
        - PEDREIRO
        - PENSAO_ALIMENTICIA_PARA_FILHOS
        - PENSIONISTA
        - PERSONAL_TRAINER
        - PESCADOR
        - PESQUISADOR_CIENTIFICO
        - PILOTO_DE_AERONAVES
        - PINTOR
        - PISCICULTOR
        - PORTEIRO_ZELADOR
        - PORTUARIO
        - PREFEITO
        - PRENSISTA_ESTAMPADOR
        - PROCURADOR_MEMBROS_DA_PROCURADORIA
        - PRODUTOR_DE_EVENTOS
        - PROFESSOR_AUTONOMO_PARTICULAR
        - PROFESSOR_ENSINO_FUNDAMENTAL_E_MEDIO
        - PROFESSOR_ENSINO_SUPERIOR
        - PROFESSOR_IDIOMAS
        - PROFISSIONAL_CIRCO_ACROBATA
        - PROFISSIONAL_LETRAS_ARTES
        - PROGRAMADOR
        - PROMOTOR_DE_VENDAS
        - PROMOTOR_PUBLICO
        - PROPRIETARIO_COMERCIAL
        - PROPRIETARIO_INDUSTRIAL
        - PROPRIETARIO_MICROEMPRESA
        - PROPRIETARIO_PRESTACAO_SERVICOS
        - PROPRIETARIO_RURAL_AGRICOLA_FLORESTAL_PECUARI
        - PROTETICO
        - PSICANALISTA
        - PSICOTERAPEUTA
        - PUBLICITARIO
        - QUIMICO
        - RADIALISTA
        - RECEPCIONISTA
        - RECICLAGEM
        - RECREADOR
        - RELACOES_PUBLICAS
        - RELOJOEIRO
        - REPRESENTANTE_COMERCIAL
        - SAPATEIRO
        - SECRETARIA
        - SECRETARIO_DE_ESTADO
        - SECRETARIO_MUNICIPAL
        - SECURITARIO
        - SEGURANCA_PATRIMONIAL
        - SENADOR
        - SERRALHEIRO
        - SERVENTUARIO_DA_JUSTICA
        - SERVICOS_DE_MANUTENCAO
        - SOCIOLOGO
        - SOLDADO_CORPO_DE_BOMBEIROS
        - SUPERINTENDENTE
        - SUPERVISOR
        - SUPERVISOR_TECNICO_OPERACIONAL
        - TABELIAO
        - TAPECEIRO
        - TECNICO_DA_RECEITA_FEDERAL
        - TECNICO_DE_BIOLOGIA
        - TECNICO_DE_CONTABILIDADE
        - TECNICO_DE_ELETRICIDADE
        - TECNICO_DE_ELETRONICA
        - TECNICO_DE_ESTATISTICA
        - TECNICO_DE_LABORATORIO
        - TECNICO_DE_MECANICA
        - TECNICO_DE_QUIMICA
        - TECNICO_DE_RADIOLOGIA
        - TECNICO_DE_TELECOMUNICACOES
        - TECNICO_EM_AGRONOMIA
        - TECNICO_EM_DESPORTOS
        - TECNICO_EM_EDIFICACOES
        - TECNICO_EM_ELETRONICA
        - TECNICO_EM_ESTATISTICA
        - TECNICO_EM_FARMACIA
        - TECNICO_EM_FINANCAS
        - TECNICO_EM_INFORMATICA
        - TECNICO_EM_INSEMINACAO
        - TECNICO_EM_MECANICA
        - TECNICO_EM_QUIMICA
        - TECNICO_EM_RADIOLOGIA
        - TECNICO_EM_REFRIGERACAO
        - TECNICO_EM_TELECOMUNICACOES
        - TECNICO_PROJETISTA
        - TELEFONISTA
        - TERAPEUTA_OCUPACIONAL
        - TORNEIRO
        - TRABALHADOR_DA_ADMINISTRACAO
        - TRABALHADOR_DA_PESCA
        - TRABALHADOR_DE_ARTES_GRAFICAS
        - TRABALHADOR_DE_CONSTRUCAO_CIVIL
        - TRABALHADOR_FABRICACAO_FUMO_CIGARRO_CHARUTOS
        - TRABALHADOR_FABRICACAO_FUMO_CIGARROS_CHARUTOS
        - TRABALHADOR_INDUSTRIAL
        - TRABALHADOR_RURAL
        - TRABALHADOR_SERV_CONTABCAIXA_ASS
        - TRAINEES
        - VENDEDOR
        - VENDEDOR_PRACISTA
        - VEREADOR
        - VETERINARIO
        - VIDRACEIRO
        - WEBDESIGNER
        - ZOOTECNISTA
      description: |
        Profissoẽs:
          * ACOUGUEIRO - Açougueiro
          * ACUMPURISTA - Acumpurista
          * ADESTRADOR - Adestrador/Tratador de Animais/Treinador de Animais
          * ADMINISTRADOR - Administrador
          * ADVOGADO - Advogado
          * AEROVIARIO - Aeroviario/Empregado de Aeroporto
          * AFIADOR - Afiador
          * AGENCIADOR_DE_PROPAGANDA - Agenciador de Propaganda
          * AGENCIADOR_CARGAS_TRANSPORTES - Agenciador de Serv. (Cargas/Transportes)
          * AGENTE_ADMINISTRATIVO - Agente Administrativo
          * AGENTE_DE_COMPRA_VENDA - Agente de Compra e Venda
          * AGENTE_DE_SERVICOS_FUNERARIOS - Agente de Serviços Funerarios
          * AGENTE_DE_VIAGEM - Agente de viagem/Agente de turismo/Operador de turismo
          * AGRONOMO - Agronomo
          * AJUDANTE_GERAL - Ajudante Geral
          * AJUSTADOR_RETIFICADOR - Ajustador/Retificador
          * ALFAIATE - Alfaiate
          * AMBULANTES - Ambulantes(Camelo,Pipoqueiro,etc)
          * ANALISTA_RECURSOS_HUMANOS - Analista de Cargos/Recursos Humanos etc
          * ANALISTA_CREDITO_E_COBRANCA - Analista de Cred/Cad/Cobr/Garant/Inf etc
          * ANALISTA_CUSTOS_PROJ_SERV_ECONOMIA - Analista de Custos/Proj/Serv/Economia etc
          * ANALISTA_PRODUCAO_CRONOALISTA - Analista de Producao/Cronoalista
          * ANALISTA_SISTEMAS - Analista de Sistemas
          * APOSENTADO - Aposentado(exceto funcionario publico)
          * ARBITRO_DE_ESPORTES - Arbitro de Esportes
          * ARMADOR_DE_FERRAGENS - Armador de Ferragens
          * ARMEIRO - Armeiro
          * ARQUEOLOGO - Arqueologo
          * ARQUITETO - Arquiteto
          * ARQUIVISTA - Arquivista
          * ARTESAO - Artesao
          * ARTISTA_PLASTICO - Artista Plastico
          * ASCENSORISTA - Ascensorista
          * ASSISTENTE_SOCIAL - Assistente Social
          * ASTRONOMO - Astronomo
          * ATLETA - Atleta Profissional
          * ATOR - Ator
          * ATUARIO - Atuario
          * AUDITOR_PUBLICO - Auditor Publico
          * AUXILIAR_COZINHA_LIMPEZA_COSTURA_COPA - Auxiliar Cozinha/Limpeza/Costura/Copa etc
          * AUXILIAR_DE_ENFERMAGEM_TECNICO - Auxiliar de Enfermagem/Tecnico de Enfermagem
          * AUXILIAR_DE_ESCRITORIO - Auxiliar de Escritorio e Ass.
          * AUXILIAR_DE_LABORATORIO - Auxiliar de Laboratorio
          * AUXILIAR_DE_SERVICOS_GERAIS - Auxiliar de Serviços Gerais
          * AVALIADOR - Avaliador
          * CUIDADOR - Cuidador
          * DANCARINO - Dançarino
          * BANCARIO - Bancario
          * BARBEIRO - Barbeiro
          * BARISTA - Barista/Barman/Barwoman
          * BIBLIOTECARIO - Bibliotecario
          * BILHETEIRO_COBRADOR - Bilheteiro(Transp/Diversao)/Trocador/Cobrador Transp Passageiro/Caixa
          * BIOLOGO - Biologo
          * BIOMEDICO - Biomedico
          * BOLSISTA - Bolsista
          * BOMBEIRO_ENCANADOR - Bombeiro/Encanador
          * BORRACHEIRO - Borracheiro
          * CABELEIREIRO - Cabeleireiro
          * CAIXEIRO_VIAJANTE - Caixeiro-Viajante
          * CAMAREIRA_ARRUMADEIRA - Camareira/Arrumadeira
          * CANTOR - Cantor
          * CARGOS_DE_CONFIANCA_COMISSOES - Cargos de Confiança/Comissoes
          * CARREGADOR - Carregador
          * CARTEIRO - Carteiro
          * CARTORARIO - Cartorario
          * CASEIRO - Caseiro
          * CAVALARICO - Cavalarico/Ferrador/Tratador de Animais
          * CENOGRAFO - Cenografo
          * CHAVEIRO - Chaveiro
          * CHEFE_DA_PRODUCAO - Chefe da Producao
          * CHEFE_INTERMEDIARIO - Chefe Intermediario
          * COBRADOR_EM_GERAL - Cobrador em Geral
          * COMANDANTE_DE_EMBARCACOES - Comandante de Embarcacoes
          * COMENTARISTA - Comentarista
          * COMISSARIO_DE_BORDO - Comissario de Bordo
          * COMPOSITOR - Compositor
          * COMUNICOLOGO - Comunicologo
          * CONSELHEIRO_TUTELAR - Conselheiro Tutelar
          * CONSULTOR_DE_EMPRESAS - Consultor de Empresas
          * CONTADOR - Contador
          * CONTRAMESTRE - Contramestre
          * CONTROLADOR_DE_VOO - Controlador de Voo
          * COREOGRAFO - Coreografo
          * CORRETOR_EM_GERAL - Corretor em Geral
          * CORTADOR - Cortador
          * COSTUREIRA - Costureira/Bordadeira/Cerzideira
          * COZINHEIRO_CONFEITEIRO_PADEIRO - Cozinheiro/Confeiteiro/Padeiro
          * DECORADOR - Decorador
          * DEGUSTADOR_VINHO_CAFE - Degustador(Vinho/Café etc)
          * DELEGADO_DE_POLICIA - Delegado de Policia
          * DEMONSTRADOR - Demonstrador
          * DENTISTA_ODONTOLOGO - Dentista/Odontologo
          * DEPILADOR - Depilador
          * DEPUTADO_ESTADUAL_FEDERAL - Deputado Estadual/Federal
          * DESEMBARGADOR - Desembargador
          * DESENHISTA - Desenhista
          * DESPACHANTE_INCLUSIVE_ADUANEIRO - Despachante (inclusive aduaneiro)
          * DETETIVE_INVESTIGADOR - Detetive/Investigador
          * DETETIZADOR - Detetizador
          * DIGITADOR - Digitador
          * DIPLOMATA - Diplomata
          * DIRETOR_DE_EMPRESA - Diretor de Empresa
          * DIRETOR_DE_ESPETACULOS - Diretor de Espetaculos
          * DIRETOR_DE_ESTABELECIMENTO_DE_ENSINO - Diretor de Estabelecimento de Ensino
          * ECONOMISTA - Economista
          * ELETRICISTA - Eletricista
          * EMBALADOR - Embalador
          * EMBALSAMADOR - Embalsamador
          * EMPREGADA_DOMESTICA - Empregada domestica
          * EMPRESARIO_DE_ATLETA - Empresario de Atleta
          * ENFERMEIRO - Enfermeiro
          * ENGENHEIRO - Engenheiro
          * ENTREVISTADOR_CENSO_PESQUISA_PRECOS - Entrevistador(Censo/Pesquisa/Preços)
          * ESCRITOR - Escritor
          * ESCULTOR - Escultor
          * ESOTERICOS_ASTROLOGOS_TAROLOGO_NUMEROLOGO - Esotericos(Astrologos/Tarologo/Numerologo etc)
          * ESTATISTICO - Estatistico
          * ESTETICISTA - Esteticista
          * ESTILISTA_MODELISTA - Estilista/Modelista
          * ESTIVADOR - Estivador
          * FARMACEUTICO - Farmaceutico
          * FAXINEIRO_DIARISTA - Faxineiro/Diarista
          * FEIRANTE - Feirante
          * FERRAMENTEIRO - Ferramenteiro
          * FISCAL - Fiscal
          * FISCAL_DE_PRODUCAO - Fiscal de Producao
          * FISCAL_SERVICOS_DE_TRANSPORTE - Fiscal Serviços de Transporte
          * FISICO - Fisico
          * FISIOTERAPEUTA - Fisioterapeuta
          * FOGUISTA_DE_EMBARCACOES_OU_LOCOMOTIVAS - Foguista de Embarcacoes ou Locomotivas
          * FONOAUDIOLOGO - Fonoaudiologo
          * FORCAS_ARMADAS_SOLDADO_MARINHEIRO - Forças Armadas (Soldado,Marinheiro,etc)
          * FOTOGRAFO - Fotografo
          * FRENTISTA_TRABALHADOR_DE_POSTO_DE_GASOLINA - Frentista/Trabalhador de posto de gasolina
          * FUNCIONARIO_PUBLICO_CIVIL_APOSENTADO - Funcionario Publico Civil Aposentado
          * FUNDIDOR - Fundidor
          * GARAGISTA - Garagista
          * GARCOM_MAITRE - Garçom/Maitre
          * GARIMPEIRO - Garimpeiro
          * GEOGRAFO - Geografo
          * GEOLOGO - Geologo
          * GERENTE - Gerente
          * GESSISTA - Gessista
          * GOVERNADOR_DE_ESTADO - Governador de Estado
          * GOVERNANTA - Governanta
          * GUIA_TURISTICO - Guia Turistico
          * HOSPITAL_TRABALHADORES_EM_GERAL - Hospital - Trabalhadores em Geral
          * IMPERMEABILIZADOR - Impermeabilizador
          * INSPETOR - Inspetor
          * INSPETOR_DE_CONTROLE_DE_QUALIDADE - Inspetor de Controle de Qualidade
          * INSTALADOR_DE_GAS_AGUA_ESGOTO - Instalador de Gas,Agua e Esgoto
          * INSTRUMENTADOR_CIRURGICO - Instrumentador Cirurgico
          * INSTRUMENTISTA - Instrumentista
          * INSTRUTOR_DE_AUTOESCOLA - Instrutor de Autoescola
          * INSTRUTOR_PROFESSOR_CURSOS_LIVRES - Instrutor/Professor de Cursos Livres(Ginastica,Ingles,Informatica)
          * INTERPRETE_TRADUTOR - Interprete/Tradutor
          * JARDINEIRO - Jardineiro
          * JOALHEIRO - Joalheiro
          * JORNALEIRO - Jornaleiro
          * JORNALISTA_REPORTER - Jornalista/Reporter
          * JUIZ_DE_DIREITO - Juiz de Direito
          * LANTERNEIRO - Lanterneiro
          * LAVADOR_DE_CARROS_ROUPAS - Lavador de Carros/Roupas
          * LEILOEIRO - Leiloeiro
          * LEITURISTA - Leiturista
          * GARI - Lixeiro/Gari/Varredor/Coletor de Lixo
          * LOCUTOR - Locutor
          * MANICURE_PEDICURE_PODOLOGO - Manicure/Pedicure/Podologo
          * MANOBRISTA_NAO_EMPREGADO_GUARDADOR_DE_CARRO - Manobrista (não empregado)/Guardador de Carro
          * MAQUILADOR - Maquilador
          * MAQUINISTA_DE_EMBARCACOES_OU_LOCOMOTIVAS - Maquinista de Embarcacoes ou Locomotivas
          * MARCENEIRO_CARPINTEIRO - Marceneiro/Carpinteiro
          * MARINHEIRO_ASS - Marinheiro e Ass.
          * MASSAGISTA - Massagista
          * MATEMATICO - Matematico
          * MECANICO - Mecanico
          * MEDICO - Medico
          * MEMBRO_DA_DEFENSORIA_PUBLICA - Membro da Defensoria Publica
          * MEMBRO_DE_EQUIPE_TECNICA_DE_ESPORTES - Membro de Equipe tecnica de esportes
          * MEMBRO_DO_MINISTERIO_PUBLICO - Membro do Ministerio Publico
          * MEMBRO_EQUIPE_TECNICA_ESPORTES - Membro Equipe Técnica Esportes
          * MESTRE_DE_PRODUCAO - Mestre de Producao
          * METEOROLOGISTA - Meteorologista
          * MILITAR_EM_GERAL - Militar em Geral
          * MILITAR_REFORMADO - Militar reformado
          * MINISTRO_DE_ESTADO - Ministro de Estado
          * MINISTRO_DE_TRIBUNAL_SUPERIOR - Ministro de Tribunal Superior
          * MODELO_DE_MODAS - Modelo de Modas
          * MONTADOR - Montador
          * MOTORISTA_TRANSPORTE_CARGAS - Motorista (veiculo transporte cargas)
          * MOTORISTA_TRANSPORTE_DE_PASSAGEIROS - Motorista (veiculo transporte de passageiros)
          * MOTORISTA_AUTONOMO_TAXISTA_PRINCIPAL - Motorista autonomo (taxista principal)
          * MUSEOLOGO - Museologo
          * MUSICO - Musico
          * NUTRICIONISTA - Nutricionista
          * OFFICE_BOY_CONTINUO_ENTREGADOR_MOTOBOY - Office boy/Continuo/Entregador/Motoboy
          * OFICIAL_DE_FORCAS_AUX_FORCAS_ARMADAS - Oficial de Forças Aux e Forças Armadas
          * OFICIAL_DE_JUSTICA - Oficial de Justiça
          * OPERADOR_DE_CALDEIRA - Operador de Caldeira
          * OPERADOR_DE_CAMERAS_DE_CINEMA_TV - Operador de Cameras de Cinema e TV
          * OPERADOR_DE_COMPUTADOR - Operador de Computador
          * OPERADOR_DE_GUINDASTE - Operador de Guindaste
          * OPERADOR_DE_ILUMINACAO - Operador de Iluminacao
          * OPERADOR_DE_MAQUINAS_APARELHOS - Operador de Maquinas e Aparelhos
          * OPERADOR_DE_TELEMARKETING - Operador de Telemarketing
          * OPERARIO_SEMI_ESPECIALIZADO_PRODUCAO - Operario Semi-especializado Producao
          * ORIENTADOR_PEDAGOGICO - Orientador Pedagogico
          * OURIVES - Ourives
          * PAISAGISTA - Paisagista
          * PEDREIRO - Pedreiro
          * PENSAO_ALIMENTICIA_PARA_FILHOS - Pensao alimenticia para filhos
          * PENSIONISTA - Pensionista
          * PERSONAL_TRAINER - Personal Trainer
          * PESCADOR - Pescador
          * PESQUISADOR_CIENTIFICO - Pesquisador Cientifico
          * PILOTO_DE_AERONAVES - Piloto de Aeronaves
          * PINTOR - Pintor
          * PISCICULTOR - Piscicultor
          * PORTEIRO_ZELADOR - Porteiro/Zelador
          * PORTUARIO - Portuario
          * PREFEITO - Prefeito
          * PRENSISTA_ESTAMPADOR - Prensista/Estampador
          * PROCURADOR_MEMBROS_DA_PROCURADORIA - Procurador/Membros da Procuradoria
          * PRODUTOR_DE_EVENTOS - Produtor de Eventos(Promoter)/Produtor de Artes em geral
          * PROFESSOR_AUTONOMO_PARTICULAR - Professor Autonomo/Particular
          * PROFESSOR_ENSINO_FUNDAMENTAL_E_MEDIO - Professor de Ensino Fundamental e Medio
          * PROFESSOR_ENSINO_SUPERIOR - Professor de Ensino Superior
          * PROFESSOR_IDIOMAS - Professor de Idiomas
          * PROFISSIONAL_CIRCO_ACROBATA - Profissional de Circo/Acrobata
          * PROFISSIONAL_LETRAS_ARTES - Profissional de Letras e Artes
          * PROGRAMADOR - Programador
          * PROMOTOR_DE_VENDAS - Promotor de Vendas
          * PROMOTOR_PUBLICO - Promotor Publico
          * PROPRIETARIO_COMERCIAL - Proprietario de Estabel. Comercial
          * PROPRIETARIO_INDUSTRIAL - Proprietario de Estabel. Industrial
          * PROPRIETARIO_MICROEMPRESA - Proprietario de Microempresa
          * PROPRIETARIO_PRESTACAO_SERVICOS - Proprietario de Estabel. de Prestaçao Serviços
          * PROPRIETARIO_RURAL_AGRICOLA_FLORESTAL_PECUARI - Proprietario de Estabel. Rural,Agricola,Florestal,Pecuario
          * PROTETICO - Protetico
          * PSICANALISTA - Psicologo/Terapeuta/Psicanalista
          * PSICOTERAPEUTA - Psicologo/Terapeuta/Psicoterapeuta
          * PUBLICITARIO - Publicitario
          * QUIMICO - Quimico
          * RADIALISTA - Radialista
          * RECEPCIONISTA - Recepcionista
          * RECICLAGEM - Reciclagem - Trabalhadores em geral
          * RECREADOR - Recreador
          * RELACOES_PUBLICAS - Relacoes Publicas
          * RELOJOEIRO - Relojoeiro
          * REPRESENTANTE_COMERCIAL - Representante Comercial
          * SAPATEIRO - Sapateiro
          * SECRETARIA - Secretaria
          * SECRETARIO_DE_ESTADO - Secretario de Estado
          * SECRETARIO_MUNICIPAL - Secretario Municipal
          * SECURITARIO - Securitario
          * SEGURANCA_PATRIMONIAL - Segurança Patrimonial - trabalhadores em geral
          * SENADOR - Senador
          * SERRALHEIRO - Serralheiro
          * SERVENTUARIO_DA_JUSTICA - Serventuario da Justiça
          * SERVICOS_DE_MANUTENCAO - Serviços de Manutencao
          * SOCIOLOGO - Sociologo
          * SOLDADO_CORPO_DE_BOMBEIROS - Soldado Corpo de Bombeiros
          * SUPERINTENDENTE - Superintendente
          * SUPERVISOR - Supervisor
          * SUPERVISOR_TECNICO_OPERACIONAL - Supervisor/Tecnico Operacional
          * TABELIAO - Tabeliao
          * TAPECEIRO - Tapeceiro
          * TECNICO_DA_RECEITA_FEDERAL - Tecnico da Receita Federal
          * TECNICO_DE_BIOLOGIA - Tecnico de Biologia
          * TECNICO_DE_CONTABILIDADE - Tecnico de Contabilidade
          * TECNICO_DE_ELETRICIDADE - Tecnico de Eletricidade
          * TECNICO_DE_ELETRONICA - Tecnico de Eletronica
          * TECNICO_DE_ESTATISTICA - Tecnico de Estatistica
          * TECNICO_DE_LABORATORIO - Tecnico de Laboratorio
          * TECNICO_DE_MECANICA - Tecnico de Mecanica
          * TECNICO_DE_QUIMICA - Tecnico de Quimica
          * TECNICO_DE_RADIOLOGIA - Tecnico de Radiologia
          * TECNICO_DE_TELECOMUNICACOES - Tecnico de Telecomunicacoes
          * TECNICO_EM_AGRONOMIA - Tecnico em Agronomia
          * TECNICO_EM_DESPORTOS - Tecnico em Desportos
          * TECNICO_EM_EDIFICACOES - Tecnico em Edificacoes
          * TECNICO_EM_ELETRONICA - Tecnico em Eletronica
          * TECNICO_EM_ESTATISTICA - Tecnico em Estatistica
          * TECNICO_EM_FARMACIA - Tecnico em Farmacia
          * TECNICO_EM_FINANCAS - Tecnico em Finanças
          * TECNICO_EM_INFORMATICA - Tecnico em Informatica
          * TECNICO_EM_INSEMINACAO - Tecnico em Inseminacao
          * TECNICO_EM_MECANICA - Tecnico em Mecanica
          * TECNICO_EM_QUIMICA - Tecnico em Quimica
          * TECNICO_EM_RADIOLOGIA - Tecnico em Radiologia
          * TECNICO_EM_REFRIGERACAO - Tecnico em Refrigeracao
          * TECNICO_EM_TELECOMUNICACOES - Tecnico em Telecomunicacoes
          * TECNICO_PROJETISTA - Tecnico Projetista
          * TELEFONISTA - Telefonista
          * TERAPEUTA_OCUPACIONAL - Terapeuta Ocupacional
          * TORNEIRO - Torneiro
          * TRABALHADOR_DA_ADMINISTRACAO - Trabalhador da Administracao
          * TRABALHADOR_DA_PESCA - Trabalhador da Pesca
          * TRABALHADOR_DE_ARTES_GRAFICAS - Trabalhador de Artes Graficas
          * TRABALHADOR_DE_CONSTRUCAO_CIVIL - Trabalhador de Construcao Civil
          * TRABALHADOR_FABRICACAO_FUMO_CIGARRO_CHARUTOS  - Trabalhador Fabricacao fumo/cigarro/charutos
          * TRABALHADOR_FABRICACAO_FUMO_CIGARROS_CHARUTOS - Trabalhador Fabricacao fumo/cigarros/charutos
          * TRABALHADOR_INDUSTRIAL - Trabalhador Industrial
          * TRABALHADOR_RURAL - Trabalhador Rural
          * TRABALHADOR_SERV_CONTABCAIXA_ASS - Trabalhador serv. contab.caixa e ass.
          * TRAINEES - Trainees
          * VENDEDOR - Vendedor
          * VENDEDOR_PRACISTA - Vendedor Pracista
          * VEREADOR - Vereador
          * VETERINARIO - Veterinario
          * VIDRACEIRO - Vidraceiro
          * WEBDESIGNER - Webdesigner
          * ZOOTECNISTA - Zootecnista
    BusinessEmpregador:
      type: string
      description: requerido se (ocupation == 'APOSENTADO_PENSIONISTA' || ocupation == 'FUNCIONARIO_PUBLICO')
      enum:
        - SERVIDOR_MUNICIPAL
        - SERVIDOR_ESTADUAL
        - SERVIDOR_FEDERAL
        - SERVIDOR_GDF
        - FORCAS_ARMADAS
    BusinessBenefitCategory:
      type: string
      description: requerido se (ocupation == 'APOSENTADO_PENSIONISTA')
      enum:
        - APOSENTADO
        - PENSIONISTA
    TypeProofIncome:
      type: string
      description: Tipo de comprovante de renda
      enum:
        - CONTRA_CHEQUE
        - DECORE
        - EXTRATO_BANCARIO
        - IMPOSTO_DE_RENDA
    MimeType:
      type: string
      description: MimeTypes disponíveis
      enum:
        - image/jpeg
        - image/png
        - application/pdf
  responses:
    Success:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            requestId: 900152918
            type: loan
    BadRequest:
      description: Data validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorFields'
          example:
            code: BAD_REQUEST
            message: Not valid
            errors:
              - field: name
                message: Can't be null
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: NOT_FOUND
            message: Not found
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: UNAUTHORIZED
            message: unauthorized
    Conflict:
      description: Conflict - request can't be executed for user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: CONFLICT
            message: conflict
  securitySchemes:
    partner_auth:
      type: oauth2
      description: 'This API uses OAuth 2 [More info](https://api.example.com/docs/auth)'
      flows:
        clientCredentials:
          tokenUrl: 'https://demo-api.easycredito.com.br/api/external/v1/oauth2/token'
